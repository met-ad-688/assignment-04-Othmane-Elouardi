[
  {
    "objectID": "assignment04-Lab02-othmane.html",
    "href": "assignment04-Lab02-othmane.html",
    "title": "Assignment 04 ‚Äî Lab 02",
    "section": "",
    "text": "The objective of this lab is to apply visual reporting and storytelling techniques to analyze job market data provided by Lightcast. Through this exercise, we will use PySpark and data visualization tools to explore, clean, and interpret a large dataset of job postings. The goal is to transform raw data into meaningful insights by identifying trends, patterns, and relationships between variables such as education level, remote work type, experience, and salary. This lab emphasizes not only technical proficiency in data processing but also the ability to communicate analytical findings effectively through visual narratives."
  },
  {
    "objectID": "assignment04-Lab02-othmane.html#typecast-key-columns",
    "href": "assignment04-Lab02-othmane.html#typecast-key-columns",
    "title": "Assignment 04 ‚Äî Lab 02",
    "section": "3.1 Typecast Key Columns:",
    "text": "3.1 Typecast Key Columns:\n\n\nCode\n# Import necessary libraries\nfrom pyspark.sql import functions as F, types as T\nimport os\n\n#  Select and typecast key columns\n# Convert salary fields to numeric values for later analysis\nclean_df = (\n    df.withColumn(\"SALARY_FROM\", F.col(\"SALARY_FROM\").cast(T.DoubleType()))\n      .withColumn(\"SALARY_TO\", F.col(\"SALARY_TO\").cast(T.DoubleType()))\n      .withColumn(\"MAX_YEARS_EXPERIENCE\", F.col(\"MAX_YEARS_EXPERIENCE\").cast(T.DoubleType()))\n)\n# Handle missing values\n# Fill missing numeric values with 0 (or another placeholder if desired)\nclean_df = clean_df.fillna({\"SALARY_FROM\": 0, \"SALARY_TO\": 0, \"MAX_YEARS_EXPERIENCE\": 0})\n\n# Optional: Calculate average salary column for convenience\nclean_df = clean_df.withColumn(\n    \"AVERAGE_SALARY\",\n    (F.col(\"SALARY_FROM\") + F.col(\"SALARY_TO\")) / 2\n)\n\n# Show a quick sample\nclean_df.select(\"SALARY_FROM\", \"SALARY_TO\", \"AVERAGE_SALARY\", \"MAX_YEARS_EXPERIENCE\").show(5, truncate=False)\n\n\n+-----------+---------+--------------+--------------------+\n|SALARY_FROM|SALARY_TO|AVERAGE_SALARY|MAX_YEARS_EXPERIENCE|\n+-----------+---------+--------------+--------------------+\n|0.0        |0.0      |0.0           |2.0                 |\n|0.0        |0.0      |0.0           |3.0                 |\n|0.0        |0.0      |0.0           |0.0                 |\n|0.0        |0.0      |0.0           |0.0                 |\n|35000.0    |150000.0 |92500.0       |0.0                 |\n+-----------+---------+--------------+--------------------+\nonly showing top 5 rows"
  },
  {
    "objectID": "assignment04-Lab02-othmane.html#save-the-cleaned-dataset",
    "href": "assignment04-Lab02-othmane.html#save-the-cleaned-dataset",
    "title": "Assignment 04 ‚Äî Lab 02",
    "section": "3.2 Save the Cleaned Dataset",
    "text": "3.2 Save the Cleaned Dataset\nNow that the dataset has been cleaned and typecasted, we will save it as a new CSV file for later use.\n\n\nCode\n# --- Save cleaned dataset safely ---------------------------------------------\nimport os, glob, shutil\n\n# keep only the columns you need downstream (edit as needed)\ncols_to_keep = [c for c in [\n    \"SALARY_FROM\",\"SALARY_TO\",\"AVERAGE_SALARY\",\"MAX_YEARS_EXPERIENCE\",\n    # \"EDUCATION_NAME\",\"REMOTE_TYPE_NAME\",\"LOT_V6_SPECIALIZED_OCCUPATION_NAME\",\n] if c in clean_df.columns]\n\ntmp_dir   = \"_tmp_clean_csv\"\nfinal_csv = \"data/lightcast_cleaned.csv\"\n\n# Write a single CSV part from Spark\n(clean_df\n .select(cols_to_keep) if cols_to_keep else clean_df\n).coalesce(1).write.mode(\"overwrite\").option(\"header\",\"true\").csv(tmp_dir)\n\n# Move part-*.csv to final path\npart_files = glob.glob(os.path.join(tmp_dir, \"part-*.csv\"))\nif not part_files:\n    raise RuntimeError(\"No part file found after Spark write.\")\nif os.path.exists(final_csv):\n    os.remove(final_csv)\nshutil.move(part_files[0], final_csv)\nshutil.rmtree(tmp_dir, ignore_errors=True)\n\nprint(\"‚úÖ Cleaned dataset saved.\")\nprint(f\"üìÅ File location: {final_csv}\")\n\n\n‚úÖ Cleaned dataset saved.\nüìÅ File location: data/lightcast_cleaned.csv"
  }
]